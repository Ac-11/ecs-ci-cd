name: CI/CD Pipeline for Node.js App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Build, tag, and push Docker image to ECR
      - name: Build, tag, and push Docker image
        run: |
          IMAGE_URI=651706780098.dkr.ecr.us-east-1.amazonaws.com/nodejs-app:latest
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      # Step 5: Register new ECS task definition with the new Docker image
      - name: Register ECS task definition
        id: register-task-def
        run: |
          # Get the new image URI
          IMAGE_URI="651706780098.dkr.ecr.us-east-1.amazonaws.com/nodejs-app:latest"
          
          # Get the current ECS task definition
          ecs_task_def=$(aws ecs describe-task-definition --task-definition nodejs-task-def | jq '.taskDefinition')
          
          # Modify the image in the task definition
          new_task_def=$(echo $ecs_task_def | jq '.containerDefinitions[0].image = "'$IMAGE_URI'"')
          
          # Register the new task definition revision
          new_task_def_arn=$(aws ecs register-task-definition \
            --family nodejs-task-def \
            --container-definitions "$new_task_def" \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)
          
          echo "New task definition ARN: $new_task_def_arn"
          
          # Set output to be used in the next steps
          echo "::set-output name=task_def_arn::$new_task_def_arn"

      # Step 6: Deploy to ECS using CodeDeploy
      - name: Deploy to ECS using CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name AppECS-Node-js-nodejs-bg \
            --deployment-group-name DgpECS-Node-js-nodejs-bg \
            --revision file://appspec.yml \
            --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
            --description "Deploy new image to ECS" \
            --task-definition ${{ steps.register-task-def.outputs.task_def_arn }}
