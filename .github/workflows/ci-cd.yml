name: CI/CD Pipeline for Node.js App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Build, tag, and push Docker image to ECR
      - name: Build, tag, and push Docker image
        run: |
          IMAGE_URI=651706780098.dkr.ecr.us-east-1.amazonaws.com/nodejs-app:latest
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      # Step 5: Download the current task definition
      - name: Download current task definition
        run: |
          aws ecs describe-task-definition --task-definition nodejs-task-def --query taskDefinition > task-definition.json

      # Step 6: Fill in the new image ID in the ECS task definition
      - name: Update ECS task definition with new image
        id: task-def
        run: |
          IMAGE_URI="651706780098.dkr.ecr.us-east-1.amazonaws.com/nodejs-app:latest"
          # Update the task definition JSON with the new image URI
          jq '.containerDefinitions[0].image = "'$IMAGE_URI'"' task-definition.json > updated-task-definition.json
          echo "::set-output name=updated_task_def_file::updated-task-definition.json"  # Return the file as an output

      # Step 7: Upload updated ECS task definition to S3
      - name: Upload updated ECS task definition to S3
        run: |
          aws s3 cp updated-task-definition.json s3://nodejsabhsith/updated-task-definition.json

      # Step 8: Deploy to ECS using CodeDeploy from S3
      - name: Deploy to ECS using CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name AppECS-Node-js-nodejs-bg \
            --deployment-group-name DgpECS-Node-js-nodejs-bg \
            --revision "s3://nodejsabhsith/updated-task-definition.json" \
            --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
            --description "Deploy new image to ECS"
